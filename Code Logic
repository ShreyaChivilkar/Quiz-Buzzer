Quiz  buzzer  system  has  eight  input  pins  corresponding  to  eight  teams.  The output    is    displayed    on a seven segment display (interfaced with microcontroller), which shows the number corresponding to the team which has pressed the button first.
This is done by:

1.	Creating an input port.
2.	Copy data from port to register.
3.	Check if switch is pressed or not until switch is pressed and once pressed set carry bit.
4.	Clear accumulator and copy data to accumulator.
5.	Mask other bits and perform RRC and JC instruction while incrementing a counter to give the number of switch which is pressed.

 A buzzer is also sounded for a small duration to give an acoustic alarm.  The connections of the seven segment, input pins and output pins is shown in the circuit diagram. When the system starts, the seven segment does not displays any output. The microcontroller keeps scanning the input pins.  As soon as any one of the inputs is pressed, the buzzer sounds for a small duration. 
This is done by using delay subroutine:

1.	Initialize the timer 0 mode 1.
2.	Initialize TH0 and TF0 to FFH since we need to traverse from 0000H to FFFFH 
3.	Monitor the overflow flag.
4.	Repeat the same process for 42 cycles to obtain a delay of 3.03 seconds.



The seven segment displays the number corresponding to the input pressed. Now even if any other input pin is pressed, there will be no effect on the system till the time the stop pin is pressed to reset the system. There are a total of nine input pins. Eight pins of port P1 of the microcontroller are corresponding to eight inputs and one stop pin for resetting the buzzer system.
This is done by:

1.	Check if reset pin is pressed.
2.	Turn off the 7 segment display by initializing output port as 0.
3.	Clear the counter register.
4.	Jump to the start of the program i.e. restart the program.

On the output side a seven segment is connected to display the corresponding output number.
This is done by:

1.	Store HEX values according to the LEDâ€™s to be displayed for a particular number (1-8) in the look up table and initialize DPTR.
2.	Read value from look up table into the accumulator using MOVC instruction.
3.	Send value from accumulator to the output port to display it to through the 7 Segment Display.
4.	The 7 Segment Display used is of Common Anode type.
